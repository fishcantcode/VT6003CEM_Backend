services:
  backend:
    build: .
    container_name: vt6003cem_backend
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: vt6003cem_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234567
      POSTGRES_DB: vt6003cem
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: vt6003cem_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
